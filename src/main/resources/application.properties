# env
spring.config.import=optional:file:.env[.properties]

# 기본 설정
spring.application.name=tuddy-api

# 포트 설정
server.port=8088

# FastAPI
rag.api.base-url=${RAG_BASE_URL}
rag.api.chat-path=/rag/chat
rag.api.normal-path=/normal/chat

# 비스트리밍 구조 응답 타임아웃 설정
rag.api.read-timeout=PT60S
rag.api.connect-timeout=PT5S

# DB
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 세션
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=never
server.servlet.session.timeout=30m

# 테스트 중 서버 초기화 방지
# spring.devtools.restart.enabled=false
server.max-http-header-size=16KB

# AWS S3
app.aws.region=${AWS_REGION}
app.aws.profile=${AWS_PROFILE:}
app.aws.s3.bucket=${S3_BUCKET}
app.s3.prefix=incoming
app.s3.presign.ttl=PT15M
app.s3.allowed-types=application/pdf,application/x-hwp,application/haansoft-hwp,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,image/png,image/jpeg,image/webp,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation
# 업로드 제한 : 100MB 
app.s3.max-size-bytes=104857600 

# CORS
app.cors.allowed-origins=${FRONTEND_ORIGINS}

# JPA / Hibernate 설정 : Flyway로 스키마 관리할 경우 ddl-auto는 none
spring.jpa.hibernate.ddl-auto=none
# SQL 포맷팅
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.jpa.show-sql=true

# Flyway 마이그레이션 설정
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.user=${FLYWAY_USER}
spring.flyway.password=${FLYWAY_PASS}

# Actuator : health check
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# OAuth
# kakao
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}

spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# naver
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.client-name=naver

spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# 메서드 오버라이딩 활성화 
spring.mvc.hiddenmethod.filter.enabled=true

# 로그 설정 
# logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.springframework.security=INFO
